# ceci est le repository git du projet ROB5 de temps réel #

Ce code permet de faire fonctionner un lidar, composé d'un capteur de distance infrarouge 
et d'un moteur à courant continu muni d'un encodeur, et de pointer une caméra pan-tilt vers les obstacles 
détectés par le lidar pour afficher l'obstacle sur l'écran.

# Pour compiler le projet : sudo make
(Pour le nettoyer : make clean)

# Pour monter le driver de l'encodeur : sudo insmod driver.ko
(Pour l'enlever : sudo rmmod driver.mod)

Le fichier zeone.cpp contient le code du programme principal 
créant 3 sous-processus parallèles assurants respectivement :
 - l'acquisition de la distance mesurée par le capteur
 - l'acquisition de la position du moteur mesurée par l'encodeur
 - le mouvement de balayage periodique du moteur 
et le fichier mcc.hpp contient les fonctions utilisées par ces processus

!!! placer le moteur à sa position médiane avant d'executer le main !!!

# Pour executer le main : ./zeone

Nous n'avons malheureusement pas pu implémenter l'affichage de l'image caméra dans le programme principal.
Cependant, le fichier camOpen.cpp contient le code permettant l'ouverture de la caméra
# Pour ouvrir la caméra : ./camOpen

Les fichiers gpio.cpp, ir.cpp, pwm.cpp et mcc.cpp contiennent du code partiellement fonctionnel
et des tests unitaires executables avec les fonctions ./gpio ./ir ./pwm et ./mcc (résultats non garantis)

Tableau de conversion des pins wiringPi (BCM -> wPi) :

 +-----+-----+---------+------+---+---Pi 3B+-+---+------+---------+-----+-----+
 | BCM | wPi |   Name  | Mode | V | Physical | V | Mode | Name    | wPi | BCM |
 +-----+-----+---------+------+---+----++----+---+------+---------+-----+-----+
 |     |     |    3.3v |      |   |  1 || 2  |   |      | 5v      |     |     |
 |   2 |   8 |   SDA.1 | ALT0 | 1 |  3 || 4  |   |      | 5v      |     |     |
 |   3 |   9 |   SCL.1 |  OUT | 0 |  5 || 6  |   |      | 0v      |     |     |
 |   4 |   7 | GPIO. 7 |   IN | 1 |  7 || 8  | 0 | IN   | TxD     | 15  | 14  |
 |     |     |      0v |      |   |  9 || 10 | 1 | IN   | RxD     | 16  | 15  |
 |  17 |   0 | GPIO. 0 |   IN | 0 | 11 || 12 | 0 | IN   | GPIO. 1 | 1   | 18  |
 |  27 |   2 | GPIO. 2 |   IN | 0 | 13 || 14 |   |      | 0v      |     |     |
 |  22 |   3 | GPIO. 3 |  OUT | 0 | 15 || 16 | 0 | IN   | GPIO. 4 | 4   | 23  |
 |     |     |    3.3v |      |   | 17 || 18 | 1 | OUT  | GPIO. 5 | 5   | 24  |
 |  10 |  12 |    MOSI | ALT0 | 0 | 19 || 20 |   |      | 0v      |     |     |
 |   9 |  13 |    MISO | ALT0 | 0 | 21 || 22 | 0 | IN   | GPIO. 6 | 6   | 25  |
 |  11 |  14 |    SCLK | ALT0 | 0 | 23 || 24 | 1 | OUT  | CE0     | 10  | 8   |
 |     |     |      0v |      |   | 25 || 26 | 1 | OUT  | CE1     | 11  | 7   |
 |   0 |  30 |   SDA.0 |   IN | 1 | 27 || 28 | 1 | IN   | SCL.0   | 31  | 1   |
 |   5 |  21 | GPIO.21 |   IN | 1 | 29 || 30 |   |      | 0v      |     |     |
 |   6 |  22 | GPIO.22 |   IN | 1 | 31 || 32 | 0 | IN   | GPIO.26 | 26  | 12  |
 |  13 |  23 | GPIO.23 |   IN | 0 | 33 || 34 |   |      | 0v      |     |     |
 |  19 |  24 | GPIO.24 |   IN | 0 | 35 || 36 | 0 | IN   | GPIO.27 | 27  | 16  |
 |  26 |  25 | GPIO.25 |   IN | 0 | 37 || 38 | 0 | IN   | GPIO.28 | 28  | 20  |
 |     |     |      0v |      |   | 39 || 40 | 0 | IN   | GPIO.29 | 29  | 21  |
 +-----+-----+---------+------+---+----++----+---+------+---------+-----+-----+
 | BCM | wPi |   Name  | Mode | V | Physical | V | Mode | Name    | wPi | BCM |
 +-----+-----+---------+------+---+---Pi 3B+-+---+------+---------+-----+-----+

